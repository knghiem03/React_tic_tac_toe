{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","renderSquare","i","squares","Game","state","history","Array","fill","stepNumber","xIsNext","gridHistory","col","row","isMoveButtonBold","this","slice","length","currentGrid","Math","floor","calculateWinner","setState","concat","step","console","log","status","_this2","current","winner","moves","map","move","desc","key","style","color","jumpTo","handleClick","Component","lines","_lines$i","Object","C_Users_knghi_React_Tic_Tac_Toe_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b52c92e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst Square = (props) => {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>{props.value}</button>\r\n  );\r\n}\r\n\r\nconst Board = (props) => {\r\n  const renderSquare = (i) => {\r\n    return (\r\n      <Square value={props.squares[i]} onClick={() => props.onClick(i)}/>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Game extends Component {\r\n    state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      gridHistory: [{\r\n        col: null,\r\n        row: null \r\n      }],\r\n      isMoveButtonBold: false,\r\n    };\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n\r\n    const gridHistory = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const currentGrid = gridHistory[gridHistory.length - 1];\r\n    const col = i % 3; \r\n    const row = Math.floor(i/3); \r\n    currentGrid.col = col;\r\n    currentGrid.row = row;\r\n    \r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([{\r\n          squares: squares\r\n        }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n      gridHistory: gridHistory.concat([{\r\n          col: currentGrid.col,\r\n          row: currentGrid.row\r\n      }]), \r\n      isMoveButtonBold: false,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0, \r\n      isMoveButtonBold: true,\r\n    });\r\n    console.log(\"I am at line 88\");\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n\r\n    const gridHistory = this.state.gridHistory;\r\n\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move + \" (\" + gridHistory[move-1].col + \",\" + gridHistory[move-1].row + \")\" :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button \r\n              // style={{fontWeight:this.state.isMoveButtonBold ? 'bold' : 'normal'}}\r\n              style={{color:this.state.isMoveButtonBold ? 'red' : 'blue'}}\r\n              onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}